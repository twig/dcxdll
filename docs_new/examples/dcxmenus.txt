;
; see https://vsthemes.org/en/icon/ for icons
;
alias dcxmenus {
  ; NB: The callback alias is ONLY used for special items that have $chr(14) in the item text, these items can trigger without closing the menu.
  mpopup mirc 1 _dcx_mircmenu_callback
  mpopup mircbar 1 _dcx_mircmenu_callback

  ; normal style menu
  ;_dcx_setmenustyle mirc normal
  ;_dcx_setmenustyle mirc darknormal
  ;_dcx_setmenustyle mircbar darknormal

  ; load icons & images used in menus
  var %f = $mircdirimages\dcx_ppac.png
  if ($isfile(%f)) xpopup -i mirc +a 0 %f
  var %f = $mircdiricons\users.ico
  if ($isfile(%f)) xpopup -i mirc + 0 %f
  var %f = $mircdirimages\one.png
  if ($isfile(%f)) xpopup -i mirc +P 0 %f
  var %f = $mircdirCanada.ico
  if ($isfile(%f)) xpopup -i mircbar + 0 %f
  var %f = $mircdiricons\users.ico
  if ($isfile(%f)) xpopup -i mircbar + 0 %f

  ; set selection box as rounded.
  xpopup -R mirc +r 1
  xpopup -R mircbar +r 1

  ; set menu as alpha blended.
  xpopup -R mirc +a 192
  xpopup -R mircbar +a 192

  ; enable tooltips
  xpopup -R mirc +t 1
  xpopup -R mircbar +t 1

  ;
  _setupmircmenubar

  _dcx_setdarkmode

  ;
  ;
}
; $1 = cmd id
alias _mircmenubar_callback {
  echo -s _mircmenubar_callback: $1-
  ; dont allow View->Menu to kill menubar as we have a custom item added use /xmenubar -p +v 0 instead as this preserves our custom addon.
  if ($1 == 110) return $true
}
alias _setupmircmenubar {
  var %m = mircmenubar_switch
  if ($xpopup(%m).ismenu) {
    if ($xmenubar(%m).ismenu) xmenubar -d %m
    xpopup -d %m
  }
  xpopup -c %m normal $chr(9) _mircmenubar_callback
  xpop -a %m -1 $chr(9) + 1 2 Add Browser Tab $chr(9) Open new Browser tab.

  _dcx_setmenustyle %m darknormal

  xmenubar -M _mircmenubar_callback
  xmenubar -a %m >|

  xmenubar -p +S normal
  xmenubar -p +HowWbtTBh $rgb(188,188,188) $rgb(188,188,188) $rgb(188,188,188) $color(88) $rgb(54,54,54) $rgb(54,54,54) 0 $rgb(19,19,19) $rgb(19,19,19)
  xmenubar -p +O 0
  xmenubar -p +e 1
}
; changes the menu to a random style.
; $1 = menu
alias _dcx_randommenustyle {
  echo -s menu: $xpopup($1).isopen
  if (!$xpopup($1).ismenu) return
  if (!$xpopup($1).isopen) return
  var %t = normal darknormal vertical verticalrev button buttonrev grade graderev custom custombig officexp office2003 office2003rev icy icyrev
  _dcx_setmenustyle $1 $gettok(%t,$r(1,$numtok(%t,32)),32)
  xpopup -r $1
  .timermenu 1 3 _dcx_randommenustyle $1
}
; $1 = menu name, $2 = style name
alias _dcx_setmenustyle {
  if ($istok(normal darknormal vertical verticalrev button buttonrev grade graderev custom custombig officexp office2003 office2003rev icy icyrev,$2,32)) {
    xpopup -l $1 1-19 default
    if ($2 == normal) {
      ;xpopup -t $1 normal
      ;xpopup -l $1 1 $rgb(240,240,240)
      ;xpopup -l $1 7 $color(83)
      ;xpopup -l $1 8 $color(59)

      set $+(%,dcx_darkmode_,$1) 0
      xpopup -t $1 normal
      xpopup -l $1 1 $rgb(240,240,240)
      xpopup -l $1 3,7 $color(83)
      xpopup -l $1 8,13 $color(59)
      xpopup -l $1 12 $color(60)
    }
    elseif ($2 == darknormal) {
      set $+(%,dcx_darkmode_,$1) 1
      xpopup -t $1 normal

      xpopup -l $1 1,3,13 $rgb(54,54,54) ;color(91)
      xpopup -l $1 4 $rgb(19,19,19) ;color(89)
      xpopup -l $1 6,7,9,19 $rgb(77,77,77) ;color(92)
      xpopup -l $1 8,10,11,12 $rgb(188,188,188) ;color(96)
    }
    elseif ($2 == vertical) xpopup -t $1 vertical
    elseif ($2 == verticalrev) xpopup -t $1 verticalrev
    elseif ($2 == button) {
      xpopup -t $1 button
      xpopup -l $1 7 $rgb(13,180,242)
    }
    elseif ($2 == buttonrev) {
      xpopup -t $1 buttonrev
      xpopup -l $1 7 $rgb(13,180,242)
    }
    elseif ($2 == grade) {
      xpopup -t $1 grade
      xpopup -l $1 1 $rgb(255,192,34)
    }
    elseif ($2 == graderev) xpopup -t $1 graderev
    elseif ($2 == custom) {
      xpopup -t $1 custom
      var %f = $mircdirtop_bg.jpg
      if ($isfile(%f)) xpopup -b $1 %f
    }
    elseif ($2 == custombig) {
      xpopup -t $1 custombig
      var %f = $mircdirtop_bg.jpg
      if ($isfile(%f)) xpopup -b $1 %f
      ; NB: this colour is only seen when alpha draw code is enabled in DrawMenuBitmap() when compiling dll.
      xpopup -l $1 1 $rgb(255,192,34)
    }
    elseif ($2 == officexp) xpopup -t $1 officexp
    elseif ($2 == office2003) xpopup -t $1 office2003
    elseif ($2 == office2003rev) xpopup -t $1 office2003rev
    elseif ($2 == icy) xpopup -t $1 icy
    elseif ($2 == icyrev) xpopup -t $1 icyrev
  }
  elseif ($2 == rounded) xpopup -R $1 +r 1
  elseif ($2 == square) xpopup -R $1 +r 0
  elseif ($2 == roundedmenu) xpopup -R $1 +R 1
  elseif ($2 == squaremenu) xpopup -R $1 +R 0
  elseif ($2 == tooltips) xpopup -R $1 +t 1
  elseif ($2 == notooltips) xpopup -R $1 +t 0
  elseif ($2 == alpha) xpopup -R $1 +a 192
  elseif ($2 == noalpha) xpopup -R $1 +a 255
  elseif ($2 == vsep) xpopup -x $1 $xpopup($1).exstyle $+ v
  elseif ($2 == novsep) xpopup -x $1 $remove($xpopup($1).exstyle,v)
  elseif ($2 == doublesep) xpopup -x $1 $xpopup($1).exstyle $+ D
  elseif ($2 == nodoublesep) xpopup -x $1 $remove($xpopup($1).exstyle,D)

  if ($1 == mircbar) .timer 1 0 _dcx_setmenustyle scriptpopup $2
}
; $1 = menu name, $2 = style name
alias -l _dcx_ismenustyle {
  ;return $iif($xpopup($1).style == $2,1,0)

  var %s = $($+(%,dcx_menustyle_,$1),2)
  if (!%s) {
    var %s = $xpopup($1).style
    if ((%s == normal) && ($($+(%,dcx_darkmode_,$1),2))) var %s = darknormal
    set -u5 $+(%,dcx_menustyle_,$1) %s
  }
  return $iif(%s == $2,1,0)
}
; $1 = menuname, $2 = id, $3 = cmd
alias _dcx_mircmenu_callback {
  ; changes made to the menu here are done while the menu is still open.
  if ($3 == checksel) {
    if ($2 isnum 600-615) {
      if ($2 == 600) _dcx_setmenustyle mircbar normal
      elseif ($2 == 601) _dcx_setmenustyle mircbar darknormal
      elseif ($2 == 602) _dcx_setmenustyle mircbar vertical
      elseif ($2 == 603) _dcx_setmenustyle mircbar verticalrev
      elseif ($2 == 604) _dcx_setmenustyle mircbar button
      elseif ($2 == 605) _dcx_setmenustyle mircbar buttonrev
      elseif ($2 == 606) _dcx_setmenustyle mircbar grade
      elseif ($2 == 607) _dcx_setmenustyle mircbar graderev
      elseif ($2 == 608) _dcx_setmenustyle mircbar custom
      elseif ($2 == 609) _dcx_setmenustyle mircbar custombig
      elseif ($2 == 610) _dcx_setmenustyle mircbar officexp
      elseif ($2 == 611) _dcx_setmenustyle mircbar office2003
      elseif ($2 == 612) _dcx_setmenustyle mircbar office2003rev
      elseif ($2 == 613) _dcx_setmenustyle mircbar icy
      elseif ($2 == 614) _dcx_setmenustyle mircbar icyrev
      elseif ($2 == 615) _dcx_randommenustyle mircbar

      if ($1 == mircbar) xpopup -r $1
      return check 1 16
    }
    ; 616-619 sets additional effects
    elseif ($2 isnum 616-621) {
      if ($2 == 616) {
        _dcx_setmenustyle mircbar $iif($xpopup(mircbar).isrounded,square,rounded)
        if ($1 == mircbar) xpopup -r $1
        return $iif($xpopup(mircbar).isrounded,check,uncheck)
      }
      elseif ($2 == 617) {
        _dcx_setmenustyle mircbar $iif($xpopup(mircbar).isroundedmenu,squaremenu,roundedmenu)
        if ($1 == mircbar) xpopup -r $1
        return $iif($xpopup(mircbar).isroundedmenu,check,uncheck)
      }
      elseif ($2 == 618) {
        _dcx_setmenustyle mircbar $iif($xpopup(mircbar).istooltips,notooltips,tooltips)
        if ($1 == mircbar) xpopup -r $1
        return $iif($xpopup(mircbar).istooltips,check,uncheck)
      }
      elseif ($2 == 619) {
        ; doesnt work correctly atm. change is only applied when menu reopens.
        _dcx_setmenustyle mircbar $iif($xpopup(mircbar).alpha != 255,noalpha,alpha)
        if ($1 == mircbar) xpopup -r $1
        return $iif($xpopup(mircbar).alpha != 255,uncheck,check)
      }
      elseif ($2 == 620) {
        _dcx_setmenustyle mircbar $iif(v isincs $xpopup(mircbar).exstyle,novsep,vsep)
        if ($1 == mircbar) xpopup -r $1
        return $iif(v !isincs $xpopup(mircbar).exstyle,uncheck,check)
      }
      elseif ($2 == 621) {
        _dcx_setmenustyle mirc $iif(D isincs $xpopup(mirc).exstyle,nodoublesep,doublesep)
        if ($1 == mirc) xpopup -r $1
        return $iif(D !isincs $xpopup(mirc).exstyle,uncheck,check)
      }
    }
    elseif ($2 isnum 700-715) {
      if ($2 == 700) _dcx_setmenustyle mirc normal
      elseif ($2 == 701) _dcx_setmenustyle mirc darknormal
      elseif ($2 == 702) _dcx_setmenustyle mirc vertical
      elseif ($2 == 703) _dcx_setmenustyle mirc verticalrev
      elseif ($2 == 704) _dcx_setmenustyle mirc button
      elseif ($2 == 705) _dcx_setmenustyle mirc buttonrev
      elseif ($2 == 706) _dcx_setmenustyle mirc grade
      elseif ($2 == 707) _dcx_setmenustyle mirc graderev
      elseif ($2 == 708) _dcx_setmenustyle mirc custom
      elseif ($2 == 709) _dcx_setmenustyle mirc custombig
      elseif ($2 == 710) _dcx_setmenustyle mirc officexp
      elseif ($2 == 711) _dcx_setmenustyle mirc office2003
      elseif ($2 == 712) _dcx_setmenustyle mirc office2003rev
      elseif ($2 == 713) _dcx_setmenustyle mirc icy
      elseif ($2 == 714) _dcx_setmenustyle mirc icyrev
      elseif ($2 == 715) _dcx_randommenustyle mirc

      if ($1 == mirc) xpopup -r $1
      return check 1 16
    }
    ; 716-720 sets additional effects
    elseif ($2 isnum 716-721) {
      if ($2 == 716) {
        _dcx_setmenustyle mirc $iif($xpopup(mirc).isrounded,square,rounded)
        if ($1 == mirc) xpopup -r $1
        return $iif($xpopup(mirc).isrounded,check,uncheck)
      }
      elseif ($2 == 717) {
        _dcx_setmenustyle mirc $iif($xpopup(mirc).isroundedmenu,squaremenu,roundedmenu)
        if ($1 == mirc) xpopup -r $1
        return $iif($xpopup(mirc).isroundedmenu,check,uncheck)
      }
      elseif ($2 == 718) {
        _dcx_setmenustyle mirc $iif($xpopup(mirc).istooltips,notooltips,tooltips)
        if ($1 == mirc) xpopup -r $1
        return $iif($xpopup(mirc).istooltips,check,uncheck)
      }
      elseif ($2 == 719) {
        ; doesnt work correctly atm. change is only applied when menu reopens.
        _dcx_setmenustyle mirc $iif($xpopup(mirc).alpha != 255,noalpha,alpha)
        if ($1 == mirc) xpopup -r $1
        return $iif($xpopup(mirc).alpha != 255,uncheck,check)
      }
      elseif ($2 == 720) {
        _dcx_setmenustyle mirc $iif(v isincs $xpopup(mirc).exstyle,novsep,vsep)
        if ($1 == mirc) xpopup -r $1
        return $iif(v !isincs $xpopup(mirc).exstyle,uncheck,check)
      }
      elseif ($2 == 721) {
        _dcx_setmenustyle mirc $iif(D isincs $xpopup(mirc).exstyle,nodoublesep,doublesep)
        if ($1 == mirc) xpopup -r $1
        return $iif(D !isincs $xpopup(mirc).exstyle,uncheck,check)
      }
    }
  }
}
alias -l _dcx_setdarkmode {
  _dcx_setmenustyle mircbar darknormal
  _dcx_setmenustyle mirc darknormal
  _dcx_setmenustyle mircmenubar_switch darknormal

  xmenubar -p +e 1
  set %dcx_darkmode_enabled 1
  set %dcx_darkmode_bkgdark_colour $color(88)
  set %dcx_darkmode_bkglight_colour $rgb(54,54,54)
  set %dcx_darkmode_txt_colour $rgb(188,188,188)
  var %f = $qt($mircdirdarkmodebkg.bmp)
  if (!$isfile(%f)) {
    if ($window(@bkgtmp)) window -c $v1
    window -hp +d @bkgtmp 0 0 100 10
    drawfill -r @bkgtmp %dcx_darkmode_bkgdark_colour 0 0 0
    drawsave @bkgtmp %f
    window -c @bkgtmp
  }
  background -lr %f
  background -br %f
  background -hr %f
  color treebar 95
  color treebar text 97
}
alias -l _dcx_setlightmode {
  _dcx_setmenustyle mircbar normal
  _dcx_setmenustyle mirc normal
  _dcx_setmenustyle mircmenubar_switch normal

  xmenubar -p +e 0
  set %dcx_darkmode_enabled 0
  background -lx
  background -bx
  background -hx
  color treebar 0
  color treebar text 1
}
menu status,menubar {
  DCX
  .Unload DCX:udcx
  .Settings
  ..Set Dark Mode: _dcx_setdarkmode
  ..Set Light Mode: _dcx_setlightmode
  ..Menu Options
  ...Menubar
  ....Menu Styles
  .....$iif($_dcx_ismenustyle(mircbar,normal),$style(1)) $chr(12) Normal $+($chr(14),600) $chr(9) Normal looking menu: _dcx_setmenustyle mircbar normal
  .....$iif($_dcx_ismenustyle(mircbar,darknormal),$style(1)) $chr(12) Dark Normal $+($chr(14),601) $chr(9) Dark Normal looking menu: _dcx_setmenustyle mircbar darknormal
  .....$iif($_dcx_ismenustyle(mircbar,vertical),$style(1)) $chr(12) Vertical $+($chr(14),602) $chr(9) Vertical Gradient: _dcx_setmenustyle mircbar vertical
  .....$iif($_dcx_ismenustyle(mircbar,verticalrev),$style(1)) $chr(12) VerticalRev $+($chr(14),603) $chr(9) Reverse Vertical Gradient: _dcx_setmenustyle mircbar verticalrev
  .....$iif($_dcx_ismenustyle(mircbar,button),$style(1)) $chr(12) Button $+($chr(14),604) $chr(9) Items are buttons: _dcx_setmenustyle mircbar button
  .....$iif($_dcx_ismenustyle(mircbar,buttonrev),$style(1)) $chr(12) ButtonRev $+($chr(14),605) $chr(9) Items are sunken buttons: _dcx_setmenustyle mircbar buttonrev
  .....$iif($_dcx_ismenustyle(mircbar,grade),$style(1)) $chr(12) Gradient $+($chr(14),606) $chr(9) Gradient: _dcx_setmenustyle mircbar grade
  .....$iif($_dcx_ismenustyle(mircbar,graderev),$style(1)) $chr(12) GradientRev $+($chr(14),607) $chr(9) Reverse Gradient: _dcx_setmenustyle mircbar graderev
  .....$iif($_dcx_ismenustyle(mircbar,custom),$style(1)) $chr(12) Custom $+($chr(14),608) $chr(9) Each item is a custom bitmap: _dcx_setmenustyle mircbar custom
  .....$iif($_dcx_ismenustyle(mircbar,custombig),$style(1)) $chr(12) CustomBig $+($chr(14),609) $chr(9) Custom bitmap covers whole menu: _dcx_setmenustyle mircbar custombig
  .....$iif($_dcx_ismenustyle(mircbar,officexp),$style(1)) $chr(12) OfficeXP $+($chr(14),610) $chr(9) OfficeXP style: _dcx_setmenustyle mircbar officexp
  .....$iif($_dcx_ismenustyle(mircbar,office2003),$style(1)) $chr(12) Office2003 $+($chr(14),611) $chr(9) Office2003 style: _dcx_setmenustyle mircbar office2003
  .....$iif($_dcx_ismenustyle(mircbar,office2003rev),$style(1)) $chr(12) Office2003rev $+($chr(14),612) $chr(9) Reverse Office2003 style: _dcx_setmenustyle mircbar office2003rev
  .....$iif($_dcx_ismenustyle(mircbar,icy),$style(1)) $chr(12) Icy $+($chr(14),613) $chr(9) Ice effect: _dcx_setmenustyle mircbar icy
  .....$iif($_dcx_ismenustyle(mircbar,icyrev),$style(1)) $chr(12) IcyRev $+($chr(14),614) $chr(9) Reverse Ice effect: _dcx_setmenustyle mircbar icyrev
  .....Randomize $+($chr(14),615): _dcx_randommenustyle mircbar
  ....$iif($xpopup(mircbar).isrounded,$style(1)) Rounded Selector $+($chr(14),616) $chr(9) Makes menu selection a rounded rect: _dcx_setmenustyle mircbar $iif($xpopup(mircbar).isrounded,square,rounded)
  ....$iif($xpopup(mircbar).isroundedmenu,$style(1)) Rounded Window $+($chr(14),617) $chr(9) Make menus rounded rects: _dcx_setmenustyle mircbar $iif($xpopup(mircbar).isroundedmenu,squaremenu,roundedmenu)
  ....$iif($xpopup(mircbar).istooltips,$style(1)) Tooltips $+($chr(14),618) $chr(9) Enable tooltips like this one!: _dcx_setmenustyle mircbar $iif($xpopup(mircbar).istooltips,notooltips,tooltips)
  ....$iif($xpopup(mircbar).alpha != 255,$style(1)) Alpha Blend $+($chr(14),619) $chr(9) Set the menus to be translucent: _dcx_setmenustyle mircbar $iif($xpopup(mircbar).alpha != 255,noalpha,alpha)
  ....$iif(v isincs $xpopup(mircbar).exstyle,$style(1)) Vertical Sep $+($chr(14),620) $chr(9) Draw a vertical seperator: _dcx_setmenustyle mircbar $iif(v isincs $xpopup(mircbar).exstyle,novsep,vsep)
  ....$iif(D isincs $xpopup(mircbar).exstyle,$style(1)) Double Sep $+($chr(14),621) $chr(9) Draw a double seperator: _dcx_setmenustyle mircbar $iif(D isincs $xpopup(mircbar).exstyle,nodoublesep,doublesep)
  ...Popups
  ....Menu Styles
  .....$iif($_dcx_ismenustyle(mirc,normal),$style(1)) $chr(12) Normal $+($chr(14),700) $chr(9) Normal looking menu: _dcx_setmenustyle mirc normal
  .....$iif($_dcx_ismenustyle(mirc,darknormal),$style(1)) $chr(12) Dark Normal $+($chr(14),701) $chr(9) Dark Normal looking menu: _dcx_setmenustyle mirc darknormal
  .....$iif($_dcx_ismenustyle(mirc,vertical),$style(1)) $chr(12) Vertical $+($chr(14),702) $chr(9) Vertical Gradient: _dcx_setmenustyle mirc vertical
  .....$iif($_dcx_ismenustyle(mirc,verticalrev),$style(1)) $chr(12) VerticalRev $+($chr(14),703) $chr(9) Reverse Vertical Gradient: _dcx_setmenustyle mirc verticalrev
  .....$iif($_dcx_ismenustyle(mirc,button),$style(1)) $chr(12) Button $+($chr(14),704) $chr(9) Items are buttons: _dcx_setmenustyle mirc button
  .....$iif($_dcx_ismenustyle(mirc,buttonrev),$style(1)) $chr(12) ButtonRev $+($chr(14),705) $chr(9) Items are sunken buttons: _dcx_setmenustyle mirc buttonrev
  .....$iif($_dcx_ismenustyle(mirc,grade),$style(1)) $chr(12) Gradient $+($chr(14),706) $chr(9) Gradient: _dcx_setmenustyle mirc grade
  .....$iif($_dcx_ismenustyle(mirc,graderev),$style(1)) $chr(12) GradientRev $+($chr(14),707) $chr(9) Reverse Gradient: _dcx_setmenustyle mirc graderev
  .....$iif($_dcx_ismenustyle(mirc,custom),$style(1)) $chr(12) Custom $+($chr(14),708) $chr(9) Each item is a custom bitmap: _dcx_setmenustyle mirc custom
  .....$iif($_dcx_ismenustyle(mirc,custombig),$style(1)) $chr(12) CustomBig $+($chr(14),709) $chr(9) Custom bitmap covers whole menu: _dcx_setmenustyle mirc custombig
  .....$iif($_dcx_ismenustyle(mirc,officexp),$style(1)) $chr(12) OfficeXP $+($chr(14),710) $chr(9) OfficeXP style: _dcx_setmenustyle mirc officexp
  .....$iif($_dcx_ismenustyle(mirc,office2003),$style(1)) $chr(12) Office2003 $+($chr(14),711) $chr(9) Office2003 style: _dcx_setmenustyle mirc office2003
  .....$iif($_dcx_ismenustyle(mirc,office2003rev),$style(1)) $chr(12) Office2003rev $+($chr(14),712) $chr(9) Reverse Office2003 style: _dcx_setmenustyle mirc office2003rev
  .....$iif($_dcx_ismenustyle(mirc,icy),$style(1)) $chr(12) Icy $+($chr(14),713) $chr(9) Ice effect: _dcx_setmenustyle mirc icy
  .....$iif($_dcx_ismenustyle(mirc,icyrev),$style(1)) $chr(12) IcyRev $+($chr(14),714) $chr(9) Reverse Ice effect: _dcx_setmenustyle mirc icyrev
  .....Randomize $+($chr(14),715): _dcx_randommenustyle mirc
  ....$iif($xpopup(mirc).isrounded,$style(1)) Rounded Selector $+($chr(14),716) $chr(9) Makes menu selection a rounded rect: _dcx_setmenustyle mirc $iif($xpopup(mirc).isrounded,square,rounded)
  ....$iif($xpopup(mirc).isroundedmenu,$style(1)) Rounded Window $+($chr(14),717) $chr(9) Make menus rounded rects: _dcx_setmenustyle mirc $iif($xpopup(mirc).isroundedmenu,squaremenu,roundedmenu)
  ....$iif($xpopup(mirc).istooltips,$style(1)) Tooltips $+($chr(14),718) $chr(9) Enable tooltips like this one!: _dcx_setmenustyle mirc $iif($xpopup(mirc).istooltips,notooltips,tooltips)
  ....$iif($xpopup(mirc).alpha != 255,$style(1)) Alpha Blend $+($chr(14),719) $chr(9) Set the menus to be translucent: _dcx_setmenustyle mirc $iif($xpopup(mirc).alpha != 255,noalpha,alpha)
  ....$iif(v isincs $xpopup(mirc).exstyle,$style(1)) Vertical Sep $+($chr(14),720) $chr(9) Draw a vertical seperator: _dcx_setmenustyle mirc $iif(v isincs $xpopup(mirc).exstyle,novsep,vsep)
  ....$iif(D isincs $xpopup(mirc).exstyle,$style(1)) Double Sep $+($chr(14),721) $chr(9) Draw a double seperator: _dcx_setmenustyle mirc $iif(D isincs $xpopup(mirc).exstyle,nodoublesep,doublesep)
  ...$iif($dcx(GetDCXSettings,StaticColours),$style(1)) Static Colours $chr(9) Fix the colours used by DCX (faster): {
    if ($dcx(GetDCXSettings,StaticColours)) dcx SetDCXSettings StaticColours 0
    else dcx SetDCXSettings StaticColours 1
  }
  ...UpdateColours $chr(9) Force DCX to update the colours to match mIRC's: dcx SetDCXSettings UpdateColours
}
